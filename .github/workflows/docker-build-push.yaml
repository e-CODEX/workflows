name: Create and publish Docker image
# Create and publish a Docker image to the e-CODEX JFrog, following SemVer and GitFlow conventions
# On pushes to develop, build and push a Docker image with the 'edge' label
# On tag pushes to the main branch, build and push a Docker image with the 'latest' label, as well as the SemVer tags (e.g. '1.2.3', '1.2', '1')
# On all pushes, build and push a Docker image with the short SHA checksum label
#
# Authentication to the e-CODEX JFrog is done using the JFrog CLI, which is configured with an OIDC token, obtained from the GitHub Actions OIDC provider
# Attestation of the Docker image is created and pushed to the e-CODEX JFrog as well as to the GitHub Attestations API

on: 
  workflow_call:
    inputs:
      image-name:
        description: 'The name of the Docker image to build and push'
        required: true
        default: ${{ github.repository }}
        type: string

env:
  REGISTRY: scm.ecodex.eu/docker

jobs:
  build-and-push-image:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      attestations: write # Required for attestation
      id-token: write # Required for JFrog CLI setup
       
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f7ce87c1d6bead3e36075b2ce75da1f6cc28aaca # v3.9.0
              
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@f748a0599171a192a2668afee8d0497f7c1069df # v4.5.6
        id: setup-jfrog-cli
        env:
            JF_URL: https://scm.ecodex.eu
        with:
            oidc-provider-name: setup-jfrog    

      - name: Authenticate Docker client
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ steps.setup-jfrog-cli.outputs.oidc-user }}
          password: ${{ steps.setup-jfrog-cli.outputs.oidc-token }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5.6.1
        with:
          images: ${{ env.REGISTRY }}/${{ inputs.image-name }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=edge,branch=develop
      
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@ca877d9245402d1537745e0e356eab47c3520991 # v6.13.0
        with:
          context: .
          push: true
          sbom: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@ef244123eb79f2f7a7e75d99086184180e6d0018 # v1.4.4
        with:
          subject-name: ${{ env.REGISTRY }}/${{ inputs.image-name }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
    