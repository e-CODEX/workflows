name: "Tag Release Version"
on:
  workflow_call:
    inputs:
      environment:
        description: "Deployment environment"
        required: false
        type: string
        default: "production"
    outputs:
      tag:
        description: 'The tag created for the release version'
        value: ${{ jobs.tag-version.outputs.tag }}
permissions:
  contents: read

jobs:
  tag-version:
    permissions:
      contents: write  # for Git to git push
    name: "Tag Release Version"
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    outputs:
      tag: ${{ steps.set_tag.outputs.tag }}
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Java
        uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 # v4.7.1
        with:
          distribution: 'temurin'
          java-version: "21"

      - name: Create Git tag
        id: set_tag
        run: |
          # Use Maven to extract the version from the pom.xml file
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          if [ -z "$VERSION" ]; then
              echo "Version not found in pom.xml"
              exit 1
          fi
          git tag "$VERSION"
          git push origin "$VERSION"
          echo "Created tag: $VERSION"
          echo "tag=$VERSION" >> $GITHUB_OUTPUT
